<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2016 Stormpath, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>7</version>
    </parent>

    <groupId>com.stormpath.tck</groupId>
    <artifactId>stormpath-tck</artifactId>
    <version>0.1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Stormpath Framework TCK</name>
    <description>
        The Stormpath Framework TCK (Test Compatibility Kit) is a collection of integration tests that ensure a
        specified web application supports all Stormpath Framework Specification behavior.  The TCK invokes only HTTP(S)
        calls to ensure that they may be run against a web application written in any programming language using any of
        the various Stormpath SDKs (Java, Python, PHP, Node, C#, etc, etc).  This project is largely (exclusively?)
        used by the Stormpath SDK teams to ensure each of the Stormpath SDK Frameworks adheres to the Stormpath
        Framework Specification.
    </description>
    <url>https://github.com/stormpath/stormpath-framework-tck</url>
    <inceptionYear>2016</inceptionYear>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git@github.com:stormpath/stormpath-framework-tck.git</connection>
        <developerConnection>scm:git:git@github.com:stormpath/stormpath-framework-tck.git</developerConnection>
        <url>git@github.com:stormpath/stormpath-framework-tck.git</url>
        <tag>HEAD</tag>
    </scm>
    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/stormpath/stormpath-framework-tck/issues</url>
    </issueManagement>

    <properties>
        <easymock.version>3.1</easymock.version>
        <httpClient.version>4.5.1</httpClient.version>
        <jdk.version>1.8</jdk.version>
        <jjwt.version>0.6.0</jjwt.version>
        <logback.version>1.1.5</logback.version>
        <maven.compiler.plugin.version>3.5.1</maven.compiler.plugin.version>
        <gmavenplus.version>1.5</gmavenplus.version>
        <groovy.version>2.4.6</groovy.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <restassured.version>2.8.0</restassured.version>
        <slf4j.version>1.7.18</slf4j.version>
        <testng.version>6.9.10</testng.version>

        <stormpath.tck.webapp.scheme>http</stormpath.tck.webapp.scheme>
        <stormpath.tck.webapp.host>localhost</stormpath.tck.webapp.host>
        <stormpath.tck.webapp.port>8080</stormpath.tck.webapp.port>
        
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>${groovy.version}</version>
            <classifier>indy</classifier>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${restassured.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${jjwt.version}</version>
        </dependency>
        <!-- JCL is needed by Rest Assured, but we want to use SLF4J's instead: -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <version>${gmavenplus.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>addSources</goal>
                            <goal>addTestSources</goal>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <invokeDynamic>true</invokeDynamic>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>java</id>
            <properties>
                <stormpath.tck.webapp.port>8080</stormpath.tck.webapp.port>
            </properties>
        </profile>
        <profile>
           <id>laravel</id>
           <properties>
               <stormpath.tck.webapp.port>8000</stormpath.tck.webapp.port>
           </properties>
       </profile>
       <profile>
           <id>express</id>
           <properties>
               <stormpath.tck.webapp.port>3000</stormpath.tck.webapp.port>
           </properties>
       </profile>

        <profile>
            <id>run-ITs</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.19.1</version>
                        <configuration>
                            <testSourceDirectory>${project.basedir}/src/main/groovy</testSourceDirectory>
                            <testClassesDirectory>${project.build.outputDirectory}</testClassesDirectory>
                            <systemProperties>
                                <stormpath.tck.webapp.scheme>${stormpath.tck.webapp.scheme}</stormpath.tck.webapp.scheme>
                                <stormpath.tck.webapp.host>${stormpath.tck.webapp.host}</stormpath.tck.webapp.host>
                                <stormpath.tck.webapp.port>${stormpath.tck.webapp.port}</stormpath.tck.webapp.port>
                            </systemProperties>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
   </profiles>
</project>
